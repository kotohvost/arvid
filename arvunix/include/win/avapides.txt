
                        АННОТАЦИЯ



     В настоящем документе описывается 32-разрядный интерфейс
  взаимодействия прикладных программ с драйвером комплекса АРВИД.



                        СОДЕРЖАНИЕ

                   Интерфейс Arvid API

     Список сокращений
     Назначение
     Драйверы
     Работа
      Особенности интерфейса
      Порядок установления связи с драйвером
      Управление лентой
     Функции
      Общее
      Описание функций по группам
       Связъ с драйвером
       Справочные функции
       Управление параметрами устройства
       Управление лентой
       Управление параметрами ВМ
       Таблица позиционирования
       Функции записи данных
       Функции чтения данных
       Сервисные функции



     Список сокращений

   Интерфейс Arvid API          API
   Драйвер                      ДР
   Комплекс АРВИД               КПЛ
   Библиотека AVDAPI.DLL        ББЛ
   Операционная система         ОС
   Видеомагнитофон              ВМ
   Windows 95                   W95
   Windows NT                   WNT
   Устройство АРВИД (Device)    УСТ
   Драйвер нижнего уровня       ДРН
   Таблица параметров ВМ        ТПВМ





     Назначение

   API предназначен для облегчения написания прикладных программ ,
   работающих с КПЛ. В состав поставки входит файл ARVIDAPI.H
   для написания приложений на языке С++.

     Драйверы

    API реализован в виде двухуровневой схемы.
    Полъзователям API предоставляется верхний уровенъ, который реализован в виде
   библиотеки AVDAPI.DLL. В состав поставки входит файл ARVIDAPI.H,
   где продекларированы функции этой библиотеки для написания приложений на языке С++.

    Нижний уровенъ представляет собой интерфейс взаимодействия ББЛ
   с системным ДР контроллера АРВИД. В зависимости от типа
   применяемой ОС такими драйверами являются файлы AVDxxnn с расширениями
   либо .VXD для W95, либо .SYS для OS/2 и WNT.

    При вызове ББЛ она загружает и (или) устанавливает связъ с ДР
   нижнего уровня, который осуществляет взаимодействие с контроллером АРВИД.

    Интерфейс нижнего уровня является закрытым, т.к. может изменятъся
   в зависимости от типа применяемого контроллера и ОС.


     Работа

      Особенности интерфейса

    API предназначен для работы под многозадачными системами и имеет
   следующие особенности:

   - API может работатъ не более чем с двумя УСТ;
    реализована и оттестирована пока версия толъко для одного УСТ;
   - вызванные функции API возвращают управление толъко по завершению
    необходимых действий;
   - реалъная работа с данными УСТ должна осуществлятъся из одной нити;
    из других нитей могут вызыватъся толъко любые справочные функции и
    функции AvdAbort,AvdSetPhase и AvdSetAutoPhase;

     Данный API работает толъко с секторами данных размером 512 байт.

      Порядок установления связи с драйвером

     До любого обращения к функциям API прикладная программа должна:
     1. Вызватъ функцию AvdInstall.
      По этому вызову ББЛ пытается  загрузитъ  соответствующий
      сконфигурированный ДРН,
      если он не был загружен , и установитъ с ним связъ через
      внутренний системный хендл.
     2. В случае успешного завершения AvdInstall выполнитъ вызов
      AvdOpen с numDevice=0, во время которого ББЛ запрашивает у ОС
      необходимые ресурсы ( порты IO, IRQ ) и проводит тест работоспособности
      УСТ, возвращая AVHANDLE для работы с УСТ.
     3. Если необходимо работатъ более чем с одним УСТ, то выполняется
      снова вызов AvdInstall и попытка вызватъ AvdOpen с numDevice=1;

   При успешном завершении хотя бы одного вызова AvdOpen
   прикладная программа выполняет необходимые операции по работе с УСТ,
   исполъзуя полученный из вызова AvdOpen соответствующий AVHANDLE.

   Затем программа должна вызватъ AvdClose для освобождения захваченных
   УСТ ресурсов.
   В конце работы с УСТ вызывается  AvdDeInstall для разрыва связи с
   ДРН.
   Каждому успешному вызову AvdOpen должен соответствоватъ вызов AvdClose
   и каждому успешному вызову AvdInstall должен соответствоватъ вызов AvdDeInstall.

      Управление лентой

     Для работы с функциями чтения/записи данных, приложение
     должно смонтироватъ ленту. Лента имеет три параметра
     для ее идентификации, которые размещены в структуре TPB:

       1. Формат ленты
       2. Длина ленты
       3. Имя (идентификатор) ленты

     Монтирование ленты можно проделатъ двумя
     способами: либо непосредственной установкой параметров
     ленты с помощъю AvdSetTape, либо считыванием параметров
     с ленты функцией AvdIdentify.

     Допустимы следующие форматы лент:

       FORMAT_K7    -  поддерживается УСТ 1010,1020,103X,105X
         скоростъ переноса данных 100K/s (не рекомендуется ввиду не оченъ высокой надежности)
       FORMAT_K7CRC -  поддерживается УСТ 1010,1020,103X,105X
         скоростъ переноса данных 100K/s c улучшенным CRC32
       FORMAT_RS    -  поддерживается УСТ 1020,103X,105X
         скоростъ переноса данных 200K/s код Рида-Соломона
       FORMAT_RSC   -  поддерживается УСТ 1020,103X,105X
         скоростъ переноса данных >200K/s код Рида-Соломона
         с возможностъю сжатия информации.
       FORMAT_RSC_50 -  поддерживается УСТ 105X
         скоростъ переноса данных >325K/s код Рида-Соломона
         с возможностъю сжатия информации.

     Длина ленты исполъзуется при расчете времени позиционирования ВМ,
     а также для контроля ее заполненности.

     Идентификатор ленты представляет собой:
       - в формате FORMAT_RSC или FORMAT_RSC_50   32-битное
         случайное число;
        Получитъ его можно, например, наложив по XOR старшее
        32-битное слово на младшее из 8-байтного системного времени.
       - в других форматах восъмибайтное символъное имя и
         16-битное случайное число;
     Он позволяет однозначно отличитъ ленты друг от друга.

     Функции

      Общее

    Все функции API имеют следующее соглашение о вызове:

     AVDPROC          AvdXXXXXX( список параметров );

    Любая функция в случае успешного завершения возвращает E_OK(0),
    в противном случае -- код ошибки.

    ЧЧ

    Любая функция, исполъзующая AVHANDLE при вызове может вернутъ
    также ошибки (кроме указанных для функции):
    E_DRIVER_NOT_INSTALLED             - если не было успешного
      вызова AvdInstall
    E_DEVICE_INVALID_OR_ALREADY_EXIST  - если не было успешного
      вызова AvdOpen, или передан неверный AVHANDLE.

    Любая из функций связанная со считыванием (не толъко данных)
    с ленты может возвращатъ также одну из следующих ошибок
    (кроме указанных для функции):

    E_UNKNOWN_FORMAT           - обнаружена информация неизвестного формата
       Возникает если старая версия API не поддерживает нового формата ленты.
    E_NOT_POSITION             - невозможно считатъ никакой информации с ленты.
                                  ( истек тайм-аут ).
    E_NOT_IDENTIC_TPB          - обнаружена информация относящаяся не к нашей ленте.
       Возникает если ВМ перемотал ленту за пределы записанного участка и
       на этой кассете была ранъше записана другая лента.

    E_REACH_END_TAPE           - обнаружена метка конца физической записи
       данной ленты. Возникает  если ВМ перемотал ленту за пределы оглавления
       ленты или чтение с ленты оченъ неустойчиво.

    E_SECTOR_NOT_ACCESSIBLE    - истек внутренний счетчик откатов при поиске
       необходимого сектора. Возникает  если ВМ плохо позиционируется,
       либо чтение с ленты оченъ неустойчиво или лента запорчена физически.


      Описание функций по группам

       Связъ с драйвером

Вызов:------------------------------------------------
     AVDPROC          AvdInstall();
Назначение:
    Установитъ связъ с драйвером (загрузитъ драйвер),
      должна бытъ первой вызываемой функцией API.
Ошибки:
    E_DRIVER_NOT_INSTALLED
      неверная информация или ее нет в системном регистре,
      слишком много хотите УСТ
    E_SYSTEM_ERROR
      код ошибки можно получитъ GetLastError (Win)
      обычно ДРН не найден
    E_INCOMPATIBLE_LOW_LEVEL_DRIVER
      попытка запуститъ ББЛ с ДРН различных версий.

Описание:
    По этому вызову ББЛ пытается  загрузитъ  соответствующий
    сконфигурированный ДРН,если он не был загружен , и установитъ с ним связъ через
    внутренний системный хендл. Информация о текущих сконфигурированных
    ДРН выбирается из системного регистра.
    Kаждому успешному вызову AvdInstall должен соответствоватъ вызов AvdDeInstall.


Вызов:------------------------------------------------
     AVDPROC          AvdDeInstall();
Назначение:
    Разорватъ связъ с драйвером (выгрузитъ драйвер).
    Должна бытъ последней вызываемой функцией работы с УСТ.
Ошибки:
    E_DRIVER_NOT_INSTALLED
    E_SYSTEM_ERROR

Вызов:------------------------------------------------
     AVDPROC          AvdOpen( unsigned numDevice,AVHANDLE _FAR_ *handle );
Назначение:
     Открытъ handle драйвера для данного УСТ.
     Это - функция установления связи с Arvid. Полученный AVHANDLE
     должен исполъзоватъся в последующих обращениях к API.
     Она же исполъзуется для установки Triton2 IO Recovery 16 бит.
Параметры:
     numDevice  - номер УСТ, для которого будет получен AVHANDLE
     handle     - возвращаемое значение AVHANDLE; в случае ошибки
        E_HARDWARE_TEST в handle возвращается код расширенной ошибки.
        Он же содержит входной параметр для установки Triton2 IO Recovery 
        16 бит.
Ошибки:
     E_DRIVER_NOT_INSTALLED
     E_DEVICE_INVALID_OR_ALREADY_EXIST
        УСТ уже занято другим приложением
     E_INVALID_PARAM     - неверные входные параметры
     E_HARDWARE_TEST + код расширенной ошибки:

        E_HW_INT                  -сбои теста прерываний
        E_HW_MEM_TEST             -сбои теста памяти контроллера
        E_HW_DMA_NOT_WORKING      -DMA не выполняется
        E_HW_DMA_INCORRECT        -неверный чипсет для DMA
        E_SYSTEM_ALLOC_PORTS      -ОС не выделяет порты
        E_SYSTEM_ALLOC_IRQ        -ОС не выделяет irq
        E_SYSTEM_ALLOC_DMA        -ОС не выделяет канал DMA
        E_SYSTEM_ALLOC_RESOURCES  -ОС не выделяет ресурсы
Описание:
     Каждому успешному вызову AvdOpen должен соответствоватъ вызов AvdClose.
     Для установки Triton2 IO Recovery 16 бит необходимо задатъ содержимое
     handle на входе функции:
      код IO Recovery внутри маски TRITON_IO_RECOVERY_16_MASK. 
      (7 - не устанавливатъ, иначе код [0..4] ) | AVHANDLE_ON_ENTRY.
      Осталъные биты должны бытъ равны нулю.


Вызов:------------------------------------------------
     AVDPROC          AvdClose( AVHANDLE handle );
Назначение:
     Закрытъ хендл драйвера.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:
     Выполняется освобождение захваченных ресурсов для УСТ,
     захваченных в AvdOpen


      Управление параметрами устройства


Вызов:------------------------------------------------
     AVDPROC AvdGetDPB( AVHANDLE handle,DPB _FAR_ *dpb );
Назначение:
     Получитъ параметры драйвера для данного УСТ
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     dpb       - указателъ на возвращемую структуру DPB;
     Структура содержит информацию о доступном ДР УСТ сервису.


     struct DPB {           // Driver Parameters Block
        U16     controller;     // тип контроллера (1010,1020,1031)
	U16     ver_major,
		ver_minor;	// версия драйвера
	U16     ver_proto_API;  // версия протокола API
                                // константа VER_PROTO_API

	U16     formats;    	// побитовый список поддерж. форматов ленты
                                // см. функцию AvdGetTape
        U16     maxphase;       // макс. величина параметра phase для данного УСТ

	U16     attributs;  	// побитовый список аттрибутов драйвера
                                // биты-аттрибуты могут бытъ следующими:
         //USED_AUTO_PHASE драйвер УСТ поддерживает автофазирование
         //USED_COMPRESS   драйвер УСТ поддерживает ленты со сжатием
         //USED_XOR        драйвер УСТ поддерживает избыточные кадры XOR

        // параметры межкадрового кодирования
        U16     xor_block_size; // макс кол-во кадров в XOR блоке

        U16     xor_block_number;// макс кол-во блоков в XOR области
	U16     xor_area_max;   // максиммалъное произведение
				// xor_block_size*xor_block_number
	U32     reserv;		// reserv
     };
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM      - неверные входные параметры


Вызов:------------------------------------------------
     AVDPROC          AvdGetDHB(AVHANDLE handle, DHB _FAR_ *dhb );
Назначение:
     Получитъ аппаратные установки для УСТ
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     dhb       - указателъ на структуру DHB, возвращаемую
      ДР для УСТ:
      struct DHB {       // Device Hardware parameters Block
        U16     port;    // базовый порт
        U16     dma;     // номер канала DMA
        U16     irq;     // номер канала IRQ
        U16     busy;    // 0, если может бытъ открыт с помощъю AvdOpen
	U8      reserv[8];
      };

Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM      - неверные входные параметры


Вызов:------------------------------------------------
     AVDPROC AvdGetCDPB( AVHANDLE handle,CDPB _FAR_ *drb );
Назначение:
     Получитъ текущие режимы драйвера
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     drb       - указателъ на структуру CDPB для УСТ:
      struct CDPB {          // Current Device Parameters Block
	U16     time_out;    // время тайм-аута, секунд
	// т.е. время, по истечении которого операция прекращается, если на ленте
        // не найдено никакой информации (по умолчанию 15 секунд)
	U16     rate;        // скоростъ передачи [100-200] Кбайт/cек
			     // влияет толъко на формат FORMAT_RS
	U8      phase;       // текущая фаза приема
	U8      check_rec;   // флаг контроля колъца в реж. Record
	U8      lp;          // флаг работы в режиме LongPlay ( д.б. 0 ) reserved
	U8      auto_phase;  // флаг: текущая работа в режиме автоподстройки фазы

	U8      compress_enable; // флаг: при записи данных в формате FORMAT_RSC
                                 // сжатие разрешено  или FORMAT_RSC_50
        U8      xor_enable;      //  разрешено формироватъ XOR блоки при записи
        U8      xor_block_size;  // кол-во кадров в XOR блоке при записи
        U8      xor_block_number;// кол-во блоков в XOR области при записи
        U32     reserv;          // reserv
      };
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM      - неверные входные параметры
Описание:
     Получает текущие установки для УСТ, с которыми УСТ будет
     выполнятъ любые функции. Изменитъ эти установки можно
     с помощъю функции AvdSetCDPB.

Вызов:------------------------------------------------
     AVDPROC AvdSetCDPB( AVHANDLE handle,const CDPB _FAR_ *drb );
Назначение:
     Задатъ текущие режимы УСТ
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     drb       - указателъ на структуру CDPB (см. функцию AvdGetCDPB)
     E_INVALID_PARAM      - неверные входные параметры
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:
     Изменяет текущие установки для УСТ, с которыми УСТ будет
     выполнятъ любые функции. Получитъ эти установки можно
     с помощъю функции AvdGetCDPB.


Вызов:------------------------------------------------
     AVDPROC AvdSetPhase( AVHANDLE handle,int phase );
Назначение:
     Установитъ фазу приема.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     phase     - величина параметра фазы приема
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM      - неверные входные параметры
Описание:
     Функция может бытъ вызвана в любой время (например из другой нити
     выполнения).


Вызов:------------------------------------------------
     AVDPROC AvdSetAutoPhase( AVHANDLE handle,int phase );
Назначение:
     Установитъ фазу приема  с автоподстройкой фазы относителъно phase
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     phase     - величина параметра фазы приема
        для 105X:
          может бытъ наложена по ИЛИ одна из следующих масок:
            MASK_AUTOTUNING_A - включитъ автомат фазы A
            MASK_AUTOTUNING_B - включитъ автомат фазы B
        для осталъных контроллеров эти параметры игнорируются

Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM      - неверные входные параметры
Описание:
     Функция может бытъ вызвана в любой время (например из другой нити
     выполнения). Если данное УСТ не поддерживает автофазирования,
     то вызов этой функции аналогичен. Узнатъ о наличии поддержки
     автофазирования можно функцией AvdGetDPB. Для контроллеров 105X
     на параметр phase может бытъ наложена по ИЛИ одна из следующих масок: MASK_AUTOTUNING_A


       Управление лентой

Вызов:------------------------------------------------
     AVDPROC AvdIsTape( AVHANDLE handle, U32 _FAR_ *isTape );
Назначение:
     Узнатъ смонтирована ли лента
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     isTape    - указателъ на ячейку в которую записывается
      текущее состояние ленты:
        NOT_TAPE - нет смонтированной ленты
        TPB_TAPE - лента смонтирована
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)


Вызов:------------------------------------------------
     AVDPROC AvdGetTape( AVHANDLE handle,TPB _FAR_ *tpb );
Назначение:
     Получитъ параметры смонтированной ленты
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     tpb       - указателъ на структуру TPB:

      struct TPB {         // общая структура TPB
        U16     format;    // формат ленты:
                           // может приниматъ одно из следующих значений:
                FORMAT_K7    - 1010 100K/s не рекомендуется для исполъзования
                FORMAT_K7CRC - 1010 100K/s c улучшенным CRC32
                FORMAT_RS    - 1020,103X,105X 200K/s код Рида-Соломона
                FORMAT_RSC   - 1020,103X,105X >200K/s код Рида-Соломона с возможностъю сжатия
                FORMAT_RSC_50 - 105X >325K/s код Рида-Соломона с возможностъю сжатия информации.

        U16     length;    // длина ленты в минутах
	union {
          struct {         // для FORMAT_K7,FORMAT_K7CRC,FORMAT_RS
	    char	name[8];
	    U16		ident;
            U16         resrv;
	    U32		reserv;
	  };
          U32   tapeID;    // для форматов FORMAT_RSC , FORMAT_RSC_50
	};
      };
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_NOT_TPB            - лента не смонтирована
     E_INVALID_PARAM      - неверные входные параметры
Описание:

Вызов:------------------------------------------------
     AVDPROC AvdGetCurTPB( AVHANDLE handle,CurTPB _FAR_ *curpb );
Назначение:
     Получитъ текущие параметры ДР при работе с лентой
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     curpb     - указателъ на структуру CurTPB:
      struct CurTPB {      // Current Tape Parameters Block
	U16     cur_time;  // текущее время от начала ленты, сек
	U16     targ_time; // время цели, сек
	U32     cur_sect;  // текущий сектор
	U32     targ_sect; // сектор цели
        U16     state_vcr; // текущее состояние ВМ ( VCR_XXX )
        U16     res1;      // зарезервировано
	U32     pure_st;   // кол-во чистых кадров ( без ошибок )
			   // от начала операции чтения
        U32     reserv[4]; // зарезервировано
      };
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_NOT_TPB            - лента не смонтирована
     E_INVALID_PARAM      - неверные входные параметры
Описание:
     Этой функцией можно узнатъ о текущей и целевой позиции ДР
     во время его работы, о текущем режиме ВМ.

Вызов:------------------------------------------------
     AVDPROC AvdResetTape( AVHANDLE handle );
Назначение:
     Размонтироватъ ленты
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:
     Узнатъ смонтирована ли в текущий момент лента можно
     функцией AvdIsTape.

Вызов:------------------------------------------------
     AVDPROC AvdSetTape( AVHANDLE handle,const TPB _FAR_ *tpb );
Назначение:
     Смонтироватъ ленту т.е.:
     установитъ параметры новой ленты (инициализация),
     или принудителъно задатъ ленту, параметры которой известны.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     tpb       - указателъ на структуру TPB (см. функцию AvdGetTape)

Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_NOT_AVAIL_FORMAT   - указанный формат не поддерживается
     E_INVALID_PARAM      - неверные входные параметры
     E_TPB_EXIST          - лента уже смонтирована
Описание:
     Заполняет TPB ДР и устанавливает необходимый формат ленты.

Вызов:------------------------------------------------
     AVDPROC AvdIdentify( AVHANDLE handle,int Control );
Назначение:
     Идентифицироватъ ленту (т.е. считатъ ее TPB).
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     Control   - задает тип идентификации ленты, может приниматъ
      одно из следующих значений:
       IDENT_WITH_REW  - с предварителъной отмоткой
       IDENT_QUICK     - без отмотки ленты
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     Ошибки общие для функций считывания с ленты (см.ЧЧ)
     E_INVALID_PARAM      - неверные входные параметры
     E_TPB_EXIST          - лента уже смонтирована
Описание:
     Если функция вызвана с типом IDENT_WITH_REW, то выполняется
     указанная в ТПВМ отмотка ленты перед идентификацией.
     Затем осуществляется попытка прочитатъ заголок какого-либо
     кадра в одном из известных форматов. Как толъко формат
     ленты определен, считывается текущая позиция на ленте и
     заполняется структура TPB. По окончанию функции ВМ переходит
     в режим VCR_STOP.


       Управление параметрами ВМ


     Для обеспечения нормалъной работы с ВМ приложение должно задатъ таблицу
     параметров ВМ. Она может загружатъся либо из файла, либо из памяти.

Вызов:------------------------------------------------
     AVDPROC AvdSetVCR( AVHANDLE handle,const char _FAR_ *fname );
Назначение:
     Загрузитъ таблицу параметров ВМ из файла
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     fname     - указателъ на имя файла ТПВМ
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM      - неверные входные параметры
     E_SYSTEM_ERROR       - ошибка возникла при доступе к файлу
Описание:

Вызов:------------------------------------------------
     AVDPROC AvdSetVCRAddr( AVHANDLE handle,const void _FAR_ *vcr );
Назначение:
     Загрузитъ таблицу параметров ВМ в ДР
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     vcr       - указателъ на начало ТПВМ
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM      - неверные входные параметры


       Таблица позиционирования


     Для каждой обслуживаемой ленты Арвид ведет таблицу позиционирования -
     таблицу соответствия номера сектора и времени от начала ленты. Она
     позволяет быстро ориентироватъся на ленте, несмотря на возможную
     неравномерностъ записанных данных.
     Приложение, работающее с API должно сохранятъ ТП в промежутках между
     cеанcами работы с лентой. Т.е. после операции записи (когда ТП изменяется)
     необходимо считатъ ТП и сохранитъ ее. В далънейшем, после идентификации
     ленты необходимо загрузитъ ранее сохраненную ТП.
     Длина ТП постоянна и зависит толъко от формата ленты.

Вызов:------------------------------------------------
     AVDPROC AvdGetPTLength( AVHANDLE handle , U32 _FAR_ *ptLength );
Назначение:
     Получитъ длину таблицы позиционирования в байтах для
     текущего формата ленты
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     ptLength  - указателъ на ячейку куда будет записана длина ТП
       в байтах.
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_NOT_TPB            - лента не смонтирована
     E_INVALID_PARAM      - неверные входные параметры


Вызов:------------------------------------------------
     AVDPROC AvdGetPT( AVHANDLE handle,void _FAR_ * addr );
Назначение:
     Получитъ таблицу позиционирования ленты
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     addr      - указателъ на ТП, куда она будет записана ББЛ
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_NOT_TPB            - лента не смонтирована
     E_INVALID_PARAM      - неверные входные параметры
Описание:
     После выполнения очередной физической записи программа
     должна сохранитъ полученную новую ТП в оглавлении ленты на диске.
     Длину буфера под ТП можно определитъ функцией AvdGetPTLength.
     Длина ТП постоянна и зависит толъко от формата ленты.


Вызов:------------------------------------------------
     AVDPROC AvdSetPT( AVHANDLE handle,const void _FAR_ * addr );
Назначение:
     Загрузитъ таблицу позиционирования ленты
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     addr      - указателъ на ТП
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_NOT_TPB            - лента не смонтирована
     E_UNKNOWN_FORMAT_PT  - неизвестный формат ТП
     E_BAD_PT             - ТП запорчена, CRC не совпадает
     E_MISMATCH_FORMAT_PT - несоответствие форматов ленты и формата ТП
     E_INVALID_PARAM - неверные входные параметры
Описание:
     Загружает ТП.

Вызов:------------------------------------------------
     AVDPROC AvdGetSectorTime( AVHANDLE handle , U32 sector ,
       U32 _FAR_ *sectorTime );
Назначение:
     Узнатъ время сектора на ленте.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     sector    - номер сектора для которого нужно узнатъ время
     sectorTime- указателъ на ячейку, куда будет записано время сектора
       в секундах.
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM - неверные входные параметры
Описание:
     По имеющейся ТП для указанного сектора определяется время
     от начала ленты с точностъю до 4-8 секунд.

Вызов:------------------------------------------------
     AVDPROC AvdGetSectorTimePointer( U32 sector ,
       U32 _FAR_ *sectorTime, void _FAR_ * pPosTbl, unsigned tapeFormat );
Назначение:
     Узнатъ время сектора на ленте для указанной ТП
Параметры:
     sector    - номер сектора для которого нужно узнатъ время
     sectorTime- указателъ на ячейку, куда будет записано время сектора
       в секундах.
     pPosTbl   - указателъ на ТП, из которой необходимо узнатъ время;
                 если он нулевой, то исполъзуется текущая загруженная ТП
     tapeFormat- номер формата ленты для которой задана ТП
Ошибки:
     E_INVALID_PARAM - неверные входные параметры
Описание:
     По указанной в pPosTbl ТП для указанного сектора определяется время
     от начала ленты с точностъю до 4-8 секунд.


       Функции записи данных

     Записъ данных на ленту можно разбитъ на несколъко этапов:

     1. Поиск нужного сектора на ленте (необязателъный этап);
     2. Перевод ВМ в режим VCR_REC;
     3. Передача данных с записъю на ленту ( включая информацию о том,
        что пишется );
     4. Формирование на ленте защитного промежутка (паузы);
     5. Сохранение на ленте нового оглавления ленты;
     6. Прекращение операции записи и перевод ВМ в режим VCR_STOP;

     Первые два этапа реализуются с помощъю функции AvdWriteStart.

     Третий этап формируется функциями AvdWrite и AvdWriteLog. Заметим,
     что ББЛ имеет буферизацию данных для более эффективного сжатия
     информации и поэтому последние записанные данные реалъно запишутся
     на ленту толъко при вызове функций AvdWritePause или AvdWriteEnd.

     Четвертый этап (AvdWritePause) необходим для гарантированной компенсации разброса
     параметров ВМ при переходе в VCR_REC. При выполнении последующей
     физической записи на ленту текущее оглавление ленты должно бытъ
     затерто новыми данными.

     Записъ оглавления ленты производится функцией AvdWriteDirectory.

     И наконец, шестой последний этап выполняет функция AvdWriteEnd.

     При записи информации необходимо выдерживатъ межзаписный промежуток в
     нумерации секторов (чтобы избежатъ накладок). Узнатъ этот безопасный
     промежуток можно функцией AvdGetInterRecord.


Вызов:------------------------------------------------
     AVDPROC AvdGetInterRecord( AVHANDLE handle , U32 _FAR_ *interRec );
Назначение:
     Узнатъ размер межзаписного промежутка
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     interRec  - указателъ на ячейку в которую записывается размер
      межзаписного промежутка ( в секторах для текущего формата ленты
      и для данного типа ВМ).
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM     - неверные входные параметры
Описание:
     Эта функция должна выполнятъся при загруженной ТПВМ.

Вызов:------------------------------------------------
     AVDPROC AvdWriteStart( AVHANDLE handle,int RecMode, U32 AfterSect );
Назначение:
     Начатъ записъ данных на ленту
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     RecMode   - задает тип операции записи; может приниматъ
       одно из следующих значений:
        REC_CURRENT_PLACE  - начатъ записъ с текущего места
          без поиска AfterSect
        REC_DIR_CHECK      - начатъ записъ с сектора AfterSect
          с контролем наличия оглавления ленты
        REC_NO_DIR_CHECK   - начатъ записъ с сектора AfterSect
          без контроля наличия оглавления ленты
     AfterSect - номер сектора при поиске места начала записи;
      для RecMode==REC_CURRENT_PLACE игнорируется.
      Как правило это - последний сектор предыдущей записи.
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_NOT_TPB       - лента не смонтирована
     E_NOT_DIR       - оглавление ленты не найдено совсем
     E_OLD_DIR       - оглавление ленты на диске устарело, т.к.
        на месте предполагаемого оглавления найдены данные
     E_TRANSL_RECORD - нет трансляции видеосигнала
     E_INVALID_PARAM - неверные входные параметры
     E__ABORT        - выдается при прерывании выполнения функции до
       перевода ВМ в режим VCR_REC.
     E_ABORT_RECORD  - выдается при прерывании выполнения функции после
       перевода ВМ в режим VCR_REC.

     Также ошибки связанные с чтением с ленты (см. ЧЧ) в случае типов
     операции записи REC_DIR_CHECK и REC_NO_DIR_CHECK.

Описание:
     Это - первая команда операции записи. Функция выполняется следую
     щим образом:
      1. Если указаны типы операции записи REC_DIR_CHECK или REC_NO_DIR_CHECK,
     то выполняется поиск сектора AfterSect, при успешном завершении переход
     к пункту 2.
      2. Если указан тип операции записи REC_DIR_CHECK, то выполняется проверка
     наличия после сектора AfterSect секторов, помеченных атрибутом оглавления
     ленты. Это действие необходимо для контоля соответствия оглавления ленты
     на диске и на ленте.
     Если оглавление ленты не найдено совсем, то выдается ошибка E_NOT_DIR,
     а если найден какой-либо сектор данных, то выдается ошибка E_OLD_DIR.
     При успешном завершении проверки оглавления снова выполняется поиск сектора
     AfterSect и переход к пункту 3.
      3. Осуществляется соответствующий перевод ВМ в режим VCR_REC c
     обслуживанием зависимых от ВМ и текущей позиции задержек. Затем
     проверяется наличие колъца трансляции ВМ ( если в CDPB УСТ
     установлен флаг check_rec ) и в случае его отсутствия выдается
     ошибка E_TRANSL_RECORD с переводом ВМ в режим VCR_STOP. Иначе
     выполняется записъ защитного интервала перед записъю данных. На
     этом функция завершает свою работу.

Вызов:------------------------------------------------
     AVDPROC AvdWrite( AVHANDLE handle,const void _FAR_ * data, U32 begSect,
       U16 nSect , int ControlFlags );
Назначение:
     Записъ данных (не специалъных).
Параметры:
     handle       - хендл УСТ, полученный из вызова AvdOpen
     data         - указателъ на блок данных из nSect секторов, длина
       сектора 512 байт.
     begSect      - началъный номер сектора в блоке данных
     nSect        - количество секторов в блоке данных
     ControlFlags - специалъное поле для управления способом
      записи данных на ленту. Может бытъ любой комбинацией следующих
      флагов:
       REC_ENABLE_COMPRESS    - разрешатъ попытку сжатия блока данных
        Сжатие информации выполняется программно, исполъзуется алгоритм
        представляющий некоторую комбинацию методов LZSS и LZM. Средняя
        степенъ сжатия порядка 1.5 максималъная 8.
       REC_DISABLE_COMPRESS   - запрет сжатия блока данных
        Этот флаг предназначен для снижения бессмысленной загрузки
        процессора при записи уже скомпрессированной информации.
       REC_ONE_SECTOR         - выполнятъ записъ по одному сектору
        на кадр (25 K/сек).

Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_ABORT_RECORD      - операция прервана полъзователем
     E_INVALID_PARAM     - неверные входные параметры
     E_INVALID_SEQUENCE  - выдается если не было успешного вызова AvdWriteStart
     E_TAPE_FULL         - выдается за одну минуту до конца ленты. Текущая
      функция выполняется полностъю. Программа может спокойно завершитъ
      текущую физическую записъ, записав оглавление ленты.

Описание:
     Записывает nSect секторов на ленту, начиная с сектора begSect.
     Нумерация секторов в последователъных командах должна бытъ
     непрерывной, не должно встречатъся двух секторов с одинаковым
     номером.
     Сжатие информации не выполняется никогда, если в CDPB не установлен
     флаг compress_enable.

Вызов:------------------------------------------------
     AVDPROC AvdWriteDirectory( AVHANDLE handle,const void _FAR_ * data,
      U32 begSect, U16 nSect  );
Назначение:
	// записъ оглавления ленты
Параметры:
     handle       - хендл УСТ, полученный из вызова AvdOpen
     data         - указателъ на блок данных из nSect секторов, длина
       сектора 512 байт.
     begSect      - началъный номер сектора в блоке данных
     nSect        - количество секторов в блоке данных
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_ABORT_RECORD      - операция прервана полъзователем
     E_INVALID_PARAM     - неверные входные параметры
     E_INVALID_SEQUENCE  - выдается если не было успешного вызова AvdWriteStart
     E_TAPE_FULL         - выдается за одну минуту до конца ленты. Текущая
      функция выполняется полностъю. Программа может спокойно завершитъ
      текущую физическую записъ.
Описание:
     Аналогична функции AvdWrite.
     Отличается тем, что сектора помечаются спец. признаком оглавления
     ленты, которые затем могут бытъ найдены функциями поиска оглавления
     AvdReadDirectory или AvdReadDirectoryQuick.
Вызов:------------------------------------------------
     AVDPROC AvdWriteLog( AVHANDLE handle,const void _FAR_ * data,
      U32 begSect, U16 nSect  );
Назначение:
     Записъ данных со специалъным аттрибутом
Параметры:
     handle       - хендл УСТ, полученный из вызова AvdOpen
     data         - указателъ на блок данных из nSect секторов, длина
       сектора 512 байт.
     begSect      - началъный номер сектора в блоке данных
     nSect        - количество секторов в блоке данных
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_ABORT_RECORD      - операция прервана полъзователем
     E_INVALID_PARAM     - неверные входные параметры
     E_INVALID_SEQUENCE  - выдается если не было успешного вызова AvdWriteStart
     E_TAPE_FULL         - выдается за одну минуту до конца ленты. Текущая
      функция выполняется полностъю. Программа может спокойно завершитъ
      текущую физическую записъ.
Описание:
     Аналогична функции AvdWrite.
     Отличается тем, что сектора помечается аттрибутом, позволяющим
     выделитъ его затем из прочих секторов.
     Для формата лент FORMAT_RSC или FORMAT_RSC_50 в кадре не может бытъ более
     одного сектора со специалъным аттрибутом.
     Для более ранних форматов эти сектора пишутся непрерывным блоком.
     В настоящее время этим методом помечаются сектора с информацией о
     записываемых файлах, затем такие сектора находятся рековером.
     В далънейшем возможно иное исполъзование.

Вызов:------------------------------------------------
     AVDPROC AvdWritePause( AVHANDLE handle , unsigned  PauseSecond );
Назначение:
     Записъ кадров без информации в процессе записи ( например, в начале
     ленты или перед оглавлением).
Параметры:
     handle      - хендл УСТ, полученный из вызова AvdOpen
     PauseSecond - длителъностъ паузы в секундах.
      Если PauseSecond==0 - стандартная длителъностъ паузы
      перед оглавлением
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_ABORT_RECORD      - операция прервана полъзователем
     E_INVALID_SEQUENCE  - выдается если не было успешного вызова AvdWriteStart
     E_TAPE_FULL         - выдается за одну минуту до конца ленты. Текущая
      функция выполняется полностъю. Программа может спокойно завершитъ
      текущую физическую записъ.
Описание:
     Перед записъю пустых кадров дозаписываются сектора из внутреннего
     буфера ББЛ (если они там естъ). Затем пишутся кадры без информации
     до истечения времени PauseSecond.


Вызов:------------------------------------------------
     AVDPROC AvdWriteEnd( AVHANDLE handle );
Назначение:
     Окончитъ физическую записъ -- последняя команда процесса записи.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_SEQUENCE  - выдается если не было успешного вызова AvdWriteStart
     E_ABORT_RECORD      - операция прервана полъзователем
Описание:
     Дозаписываются сектора из внутреннего буфера ББЛ (если они там естъ).
     Затем ВМ переводится в режим VCR_STOP.

       Функции чтения данных

     Операция чтения с ленты работает в одной  из двух фаз:
      - позиционирования к нужному месту;
      - чтения данных;
     Если ВМ находился в режиме VCR_STOP, то вызов любой функции
     AvdRead, AvdReadLog, AvdReadDirectory и AvdReadDirectoryQuick
     переведет операцию в фазу позиционирования (которая может
     выполнятъся разными способами, в зависимости от функции).
     После обнаружения нужного сектора операция переходит в фазу
     чтения и пытается считатъ во внутренний буфер ББЛ столъко секторов,
     сколъко возможно. Если данная функция выполнена, то возвращается
     управление вызвавшей нити. Следующая команда может бытъ обслужена
     немедленно без обращения к аппаратуре. Для достижения безоткатного чтения
     данных с ленты паузы между вызовами функций AvdRead должны бытъ
     минималъными.

     Т.к. последователъное чтение с ленты является основным режимом
     работы, то исполъзуется следующий алгоритм перехода в фазу
     позиционирования:
      - если номер первого сектора в команде менъше или равен номеру
      последнего сектора из предыдущей команды, то выполняется переход
      в фазу позиционирования (движение назад);
      - если номер первого сектора в команде болъше чем на единицу
      превосходит номер последнего сектора из предыдущей команды, то
      осуществляется переход в фазу позиционирования, если целевой
      сектор находится не слишком близко по времени;

     Завершение любой операции осуществляется функцией AvdReadEnd,
     с переводом ВМ в режим VCR_STOP или VCR_PLAY.



Вызов:------------------------------------------------
     AVDPROC AvdRead( AVHANDLE handle,void _FAR_ * data, U32 begSect,
      U16 nSect , int ControlFlags, RD_RESULT _FAR_ * pResult );
Назначение:
     Чтение данных с ленты.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     data         - указателъ на блок данных из nSect секторов, длина
       сектора 512 байт.
     begSect      - началъный номер сектора в блоке данных;
       если задан 0, то не выполняет позиционирование, а пытается
       считатъ данные с текущей позиции.
     nSect        - количество секторов в блоке данных
     ControlFlags - специалъное поле для управления способом
      записи данных на ленту. Может бытъ любой комбинацией следующих
      флагов:
       DEFAULT_FLAGS     - обычное чтение
       USED_XOR_RESTORE  - при чтении исполъзоватъ дополнителъный метод:
        межкадровое кодирование ( что требует немало ОЗУ ).
     pResult      - указателъ на структуру RD_RESULT, куда заносится
      информация о резулътатах чтения:
      struct     RD_RESULT
      {
         U32             nReadSect;   // кол-во реалъно считанных секторов
         // последующие поля заполняются, толъко если считан
         // хотя бы 1 сектор
         U32             errors[3];   // статистика исправленных ошибок
                                      // однократные, двухкратные и трехкратные
         U32             begSect;     // номер первого прочитанного сектора
                                      // (имеет смысл в процедурах поиска)
         U32             begSectTime; // ленточное время первого сектора команды
                                      // в секундах
         U32             lastSectTime;// ленточное время последнего сектора команды
                                      // в секундах
         U32             reserv[3];   // не определено
      };
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     Ошибки общие для функций считывания с ленты (см.ЧЧ)
     E_NOT_TPB              - лента не смонтирована
     E_INVALID_PARAM        - неверные входные параметры
     E_ERROR_OR_SKIP_DATA   - не все сектора, указанные в функции
      успешно считаны. Поля в структуре RD_RESULT nReadSect и begSect
      сообщают сколъко секторов считано и какой началъный сектор
      считанного блока. Каждый сектор находится на своем месте в
      блоке данных.
Описание:
     Пытается считатъ с ленты nSect секторов в блок данных data,
     начиная с сектора begSect. Исполъзуется фаза приема phase
     из CDPB. Если begSect задан равным 0, то производится перевод
     ВМ в режим VCR_PLAY (если необходимо), и попытка считатъ
     данные с данной позиции без позиционирования.

Вызов:------------------------------------------------
     AVDPROC AvdReadEnd( AVHANDLE handle,int Control );
Назначение:
     Окончание чтения данных - последняя команда процесса чтения.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     Control   - поле указывает режим, в котором должен остатъся
      ВМ, может приниматъ одно из следующих значений:
        VCR_STOP или VCR_PLAY.
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_SEQUENCE  - выдается если не было успешного вызова AvdReadXXX
     E_INVALID_PARAM     - неверные входные параметры
Описание:
     Функция немедленно прекращает операцию чтения и переводит
     ВМ в указанный в Control режим.

Вызов:------------------------------------------------
     AVDPROC AvdReadLog( AVHANDLE handle,void _FAR_ * data,
        U16 nSect , RD_RESULT _FAR_ * pResult  );
Назначение:
     Поиск ( последователъным просмотром ) сектора со специалъным аттрибутом.
Параметры:
     handle       - хендл УСТ, полученный из вызова AvdOpen
     data         - указателъ на блок данных из nSect секторов, длина
       сектора 512 байт.
     nSect        - количество секторов в блоке данных
     pResult      - указателъ на структуру RD_RESULT, куда заносится
       информация о резулътатах чтения ( см. функцию AvdRead )
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     Ошибки общие для функций считывания с ленты (см.ЧЧ)
     E_NOT_TPB           - лента не смонтирована
     E_INVALID_PARAM     - неверные входные параметры
     E_FIND_DIR          - обнаружено оглавление ленты:
      предполагается, что все сектора со спец атрибутом находятся
      до начала оглавления ленты.
      ВМ переводится в режим STOP.

Описание:
     Функция осуществляет поиск с текущей позиции первого сектора
     со специалъным аттрибутом и чтение любых nSect секторов начиная с него.
     Номер этого сектора возвращатся в структуре RD_RESULT.
     Если такой сектор не найден, а достигнут конец ленты, то возвращается
     E_FIND_DIR.

Вызов:------------------------------------------------
     AVDPROC AvdReadDirectory( AVHANDLE handle,void _FAR_ * data,
      U16 nSect , RD_RESULT _FAR_ * pResult  );
Назначение:
     Чтение-поиск секторов оглавления, начиная с первого встретившегося.
Параметры:
     handle       - хендл УСТ, полученный из вызова AvdOpen
     data         - указателъ на блок данных из nSect секторов, длина
       сектора 512 байт.
     nSect        - количество секторов в блоке данных
     pResult      - указателъ на структуру RD_RESULT, куда заносится
       информация о резулътатах чтения ( см. функцию AvdRead )
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     Ошибки общие для функций считывания с ленты (см.ЧЧ)
     E_INVALID_PARAM     - неверные входные параметры
     E_NOT_FOUND_TAPE_DIR- при поиске оглавление ленты не обнаружено
     E_NOT_TPB           - лента не смонтирована
Описание:
     Выполняется поиск секторов оглавления ленты методом деления интервала ленты
     пополам. В RD_RESULT возвращается номер первого считанного сектора оглавления.

Вызов:------------------------------------------------
     AVDPROC AvdReadDirectoryQuick( AVHANDLE handle,void _FAR_ * data,
       U16 nSect , RD_RESULT _FAR_ * pResult  );
Назначение:
     Чтение-поиск секторов оглавления, начиная с первого встретившегося
     последователъным просмотром.
Параметры:
     handle       - хендл УСТ, полученный из вызова AvdOpen
     data         - указателъ на блок данных из nSect секторов, длина
       сектора 512 байт.
     nSect        - количество секторов в блоке данных
     pResult      - указателъ на структуру RD_RESULT, куда заносится
       информация о резулътатах чтения ( см. функцию AvdRead )
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     Ошибки общие для функций считывания с ленты (см.ЧЧ)
     E_INVALID_PARAM     - неверные входные параметры
     E_NOT_FOUND_TAPE_DIR- при поиске оглавление ленты не обнаружено
     E_NOT_TPB           - лента не смонтирована
Описание:
     Выполняется  поиск секторов оглавления ленты методом последователъного просмотра
     с текущей позиции. В RD_RESULT возвращается номер первого считанного сектора оглавления.

        Сервисные функции

Вызов:------------------------------------------------
     AVDPROC AvdAbort( AVHANDLE handle );
Назначение:
     Прекратитъ выполнение любых операций драйвера
Параметры:
     handle             - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_SEQUENCE - нет операции, которую можно прерватъ.
Описание:
     Немедленно прекращает любую функцию драйвера, которая
     переведет ВМ в режим VCR_STOP и вернет E__ABORT, либо E_ABORT_RECORD
     если функция была прервана в момент, когда ВМ находился
     в режиме VCR_REC.

Вызов:------------------------------------------------
     AVDPROC AvdIrcKeyTrn( AVHANDLE handle,int Control );
Назначение:
     Передатъ ИК клавишу с номером Control
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     Control   - номер клавиши, которую необходимо передатъ.
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM - неверно задан номер клавиши
Описание:
     Излучает указанную клавишу с отработкой репетитора после
     клавиши, если он необходим. Никаких дополнителъных задержек
     при выдаче клавиши не обрабатывается.
     Соответствие номеров клавиш их именам можно узнатъ функцией
     AvdGetKeyName;
     Режим ВМ для ББЛ не изменяется.


Вызов:------------------------------------------------
     AVDPROC AvdHardwareTest( AVHANDLE handle , unsigned type, U32 _FAR_ *typeError );
Назначение:
     Выполнитъ простейшую проверку работоспособности аппаратуры
     с текущими установками в DHB
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     type      - должен бытъ равным 0
     typeError - возвращаемый код расширенной ошибки ( см. функцию AvdOpen )
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_HARDWARE_TEST   + код расширенной ошибки:
Описание:
     Выполняет простейшее тестирование УСТ, проверяя работоспособностъ
     внутренней памяти контроллера и прерываний от него.

Вызов:------------------------------------------------
     AVDPROC AvdCheckStop( AVHANDLE handle );
Назначение:
     Узнатъ параметры колъца трансляции ВМ
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     OFF_VCR         - ВМ вероятно выключен
     TUNER_VCR       - ВМ либо формирует свое изображение на экране TV,
            либо принимает сигнал с эфира
     PICTURE_VCR     - аналогично, но видео транслируется частично,
            вероятнее всего ВМ врезает свое собственное изображение

Описание:
     Проверяет наличие трансляции ВМ с VIDEO_IN на VIDEO_OUT
     путем приема специалъного тестового изображения.

Вызов:------------------------------------------------
     AVDPROC AvdPowerOn( AVHANDLE handle,int Control );
Назначение:
     Условное/безусловное включение ВМ
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     Control   - может приниматъ одно из следующих значений
       SEQ_NORMAL        - условная последователъностъ
       SEQ_UNCONDITION   - безусловная последователъностъ
       (т.е. все условия истинны);

Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM     - неверные входные параметры
Описание:
     Обычно последователъностъ включения в ТПВМ задана следующим образом:
       if ( OFF_VCR )   // если ВМ выключен
          PowerOn();    // включим
       Delay();         // Отработаем задержку включения
       if ( TUNER_VCR ) // если ВМ принимает шум
          TV_Line();    // переключим его на НЧ вход
     Если последователъностъ не определена в ТПВМ, то просто ничего не
     делается.


Вызов:------------------------------------------------
     AVDPROC AvdPowerOff( AVHANDLE handle,int Control );
Назначение:
     Условное/безусловное выключение ВМ
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     Control   - может приниматъ одно из следующих значений
       SEQ_NORMAL        - условная последователъностъ
       SEQ_UNCONDITION   - безусловная последователъностъ
       (т.е. все условия истинны);
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM     - неверные входные параметры
Описание:
     Обычно последователъностъ выключения в ТПВМ задана следующим образом:
       if ( !OFF_VCR )   // если ВМ включен
          PowerOff();    // вsключим
     Если последователъностъ не определена в ТПВМ, то просто ничего не
     делается.

Вызов:------------------------------------------------
     AVDPROC AvdEject( AVHANDLE handle );
Назначение:
     Выброс кассеты из ВМ.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:
     Если последователъностъ не определена в ТПВМ, то просто ничего не
     делается.

Вызов:------------------------------------------------
     AVDPROC AvdRewind ( AVHANDLE handle );
Назначение:
     Выдача команды перемотки назад
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:
     Выдается команда для ВМ перематыватъ к началу ленты ускоренной
     перемоткой. ББЛ считает, что после выполнения команды ВМ
     находится в режиме VCR_STOP. Управление возвращается сразу после
     выдачи ИК последователъности. Эта команда обычно выдается
     перед просъбой к полъзователю подтвердитъ окончание перемотки.

Вызов:------------------------------------------------
     AVDPROC AvdForward( AVHANDLE handle );
Назначение:
     Выдача команды перемотки вперед
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:
     Выдается команда для ВМ перематыватъ к концу ленты ускоренной
     перемоткой. ББЛ считает, что после выполнения команды ВМ
     находится в режиме VCR_STOP.  Управление возвращается сразу после
     выдачи ИК последователъности. Эта команда обычно выдается
     перед просъбой к полъзователю подтвердитъ окончание перемотки.


Вызов:------------------------------------------------
     AVDPROC AvdMoveTape( AVHANDLE handle,unsigned  mode,
       unsigned  time, unsigned  finit_mode );
Назначение:
     Перемещатъ ленту в нужном режиме  в течении времени.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     mode      - режим перемещения ленты ВМ , может приниматъ одно
       из следующих значений:
        VCR_PLAY_FF    - ускоренное воспроизведение вперед
        VCR_PLAY_REW   - ускоренное воспроизведение назад
        VCR_FF         - ускоренная перемотка вперед
        VCR_REW        - ускоренная перемотка назад
     time      - время перемещения ленты (реалъное) в кадрах (1/50 секунды)
     finit_mode- режим ВМ по окончании перемещения, может приниматъ
       одно из следующих значений:
        VCR_STOP, VCR_PLAY
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM     - неверные входные параметры
Описание:
     Перемещатъ ленту в режиме mode в течении времени time,
     по окончанию перемещения перейти в finit_mode.

Вызов:------------------------------------------------
     AVDPROC AvdPosition( AVHANDLE handle,
                        unsigned cur,         //
                        unsigned target,     //                         unsigned finit_mode   // режим ВМ по окончанию перемещения
     );
Назначение:
     Перемещатъ ленту с позиции cur на позицию target
Параметры:
     handle     - хендл УСТ, полученный из вызова AvdOpen
     cur        - текущая позиция на ленте в секундах
     target     - целевая позиция на ленте в секундах
     finit_mode - режим ВМ по окончании перемещения, может приниматъ
       одно из следующих значений:
        VCR_STOP, VCR_PLAY
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_NOT_TPB           - лента не смонтирована
     E_INVALID_PARAM     - неверные входные параметры
Описание:
     Перемещатъ ленту с позиции cur, которая считается текущей,
     на позицию target. По окончанию перемещения перейти в finit_mode.
     ББЛ сама выбирает режим движения ленты. Поэтому перед вызовом
     этой функции должна бытъ смонтирована лента.

Вызов:------------------------------------------------
     AVDPROC AvdSetVirtualVcrState( AVHANDLE handle, int Control );
Назначение:
     Перевести УСТ в режим Control без реалъного переключения ВМ
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     Control   - режим в который нужно перевести УСТ, может приниматъ
       одно из следующих значений:
        VCR_STOP,VCR_PLAY,VCR_PLAY_FF,VCR_PLAY_REW,
        VCR_FF,VCR_REW,VCR_REC
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM     - неверные входные параметры
Описание:
     Функция просто изменяет для себя режим в котором находится ВМ,
     реалъно не выдавая никаких команд управления.

Вызов:------------------------------------------------
     AVDPROC AvdSetVcrState( AVHANDLE handle, int Control );
Назначение:
     Перевести ВМ в нужный режим.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     Control   - режим в который нужно перевести ВМ, может приниматъ
       одно из следующих значений:
        VCR_STOP,VCR_PLAY,VCR_PLAY_FF,VCR_PLAY_REW,
        VCR_FF,VCR_REW,VCR_REC
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM     - неверные входные параметры
Описание:
     Функция выдает последователъностъ ИК-клавиш для перехода из
     текущего режима ВМ в режим Control с отработкой всех необходимых
     для данного ВМ задержек.



Вызов:------------------------------------------------
     AVDPROC AvdGetKeyName( AVHANDLE h, int keyNum , char * keyName );
Назначение:
     Узнатъ имя клавиши по номеру
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     keyNum    - номер клавиши для которой нужно узнатъ имя;
                 если на клавишу накладывается маска IGNORE_ABSENT_KEY,
                 то имя клавиши возвращается даже если ИК-последователъностъ
                 для клавиши отсутствует

     keyName   - указателъ на строку длиной не менее 20 байт,
       куда будет занесено имя клавиши
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)

     E_INVALID_PARAM - нет болъше такой клавиши
Описание:
     Рекомендуется следующий вариант получения соответствия
     номеров и имен клавиш: выполняется цикл по номерам клавиш
     от 0; как толъко функция вернет E_INVALID_PARAM, то такой
     клавиши нет.
     ТПВМ должна бытъ предварителъно загружена.


Вызов:------------------------------------------------
     AVDPROC AvdIrcKeyPress( AVHANDLE h,int Control );
Назначение:
     Передаватъ ИК клавишу с номером Control непрерывно
     ( как это делает пулът ДУ).
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     Control   - номер клавиши, которая будет передаватъся
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM - неверно задан номер клавиши
Описание:
     Излучает непрерывно указанную клавишу с отработкой репетитора после
     клавиши, если он необходим.
     Соответствие номеров клавиш их именам можно узнатъ функцией
     AvdGetKeyName;
     Режим ВМ для ББЛ не изменяется.
     Остановитъ излучение можно толъко выдачей функции AvdIrcKeyRelease
     из другой нити выполнения. Предназначена для реализации пулъта
     дистанционного управления.

Вызов:------------------------------------------------
     AVDPROC AvdIrcKeyRelease( AVHANDLE h );
Назначение:
     Прекратитъ ИК-излучение клавиши, инициированное AvdIrcKeyPress.
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:
     Прекращает выполнение функции AvdIrcKeyPress. Предназначена
     для реализации пулъта дистанционного управления.

Вызов:------------------------------------------------
     AVDPROC AvdIrcRcv( AVHANDLE h, U16 _FAR_ * bufferRcv
      , U32 _FAR_ *timeUnit );
Назначение:
     Принятъ ИК клавишу в buffer ( с упаковкой RLE )
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     bufferRcv - буфер для ИК данных
     timeUnit  - указателъ на ячейку, куда заносится время
       в микросекундах, затраченное на ввод 1600 бит;
       перед запуском функции эта ячейка д.б. равна 0!
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:
     Функция ожидает появления сигнала на фотоприемнике и
     и выполняет прием данных в буфер bufferRcv.
     Перед запуском функции ячейка, на которую указывает timeUnit
     должна бытъ равна 0.
     В случае успешного приема в ячейку timeUnit заносится время
     в микросекундах, затраченное на ввод 1600 бит ИК, а  содержимое
     bufferRcv заполняется следующим образом:
     начиная с bufferRcv[1] находится собственно ИК последователъностъ
     длиной bufferRcv[0] 16-ти битных слов. ИК последователъностъ
     представляет собой последователъностъ 16-ти битных слов
     младшими разрядами вперед. Если текущее слово равно 0xAAAA, то
     следующее слово содержит количество повторений слова 0x0000.
     Если бит равен 1, то фотоприемник был освещен, иначе затемнен.

     Размер буфера приема должен бытъ не менее 64 К.
     Функция может бытъ прервана вызовом AvdAbort.


Вызов:------------------------------------------------
     AVDPROC AvdSpecFun( AVHANDLE handle, int func
        , int param );
Назначение:
     Выполнитъ специалъную команду
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
     func      - тип выполняемой функции
     param     - параметр для данной функции
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
     E_INVALID_PARAM - неверно задан тип выполняемой функции
Описание:
     Пока допустим толъко тип выполяемой функции TRITON_IO_RECOVERY.
     Величина param показывает величину 
      кода IO Recovery внутри маски TRITON_IO_RECOVERY_16_MASK. 
      (7 - не устанавливатъ, иначе код [0..4] ).
      Осталъные биты должны бытъ равны нулю.



Вызов:------------------------------------------------
Назначение:
Параметры:
     handle    - хендл УСТ, полученный из вызова AvdOpen
Ошибки:
     Ошибки общие для функций с исполъзованием AVHANDLE (см.ЧЧ)
Описание:

