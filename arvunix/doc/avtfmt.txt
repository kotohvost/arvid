Версия 1.00
(C) КСИ,1997

  ЧАСТЬ 1. Описание формата оглавления AVT-лент.

Оглавление avt-ленты состоит из двух частей:
- массив элементов оглавления,
- таблица позиционирования.

I. Массив оглавления представляет собой массив элементов длины 40 байт
различных типов. Далее описаны типы элементов:

Примечание. Используемый далее термин "указатель" означает смещение в
_байтах_ относительно начала файла. Значение указателя, равное 0, означает
NULL-указатель.

1. Заголовок AVT-файла. В AVT-оглавлении присутствует один и только один
элемент данного типа. Он располагается в самом начале оглавления.

Имеет следующий формат:

DWORD  signature; //Сигнатура файла: 'PTVA' - литерная константа
   // ("AVTP"-наоборот! из за порядка байтов в слове)
DWORD  avtformat; //омер версии avt-формата. Сейчас: 1.
DWORD  checksum; // сейчас не используется (0)
DWORD  IEmpty;  // размер массива оглавления (указатель на элемент,
   // следующий за последним)
DWORD  hFree;         // головной указатель списка неиспользуемых
   // элементов массива оглавления
DWORD  rootdir; // Указатель на вершину дерева файлов корневой директории
DWORD  newsect; // номер последнего записанного сектора+1
DWORD  lrnewsect; // newsect предыдущей записи (для отката на запись)
DWORD  iphystape; // указатель на элемент-описатель носителя
DWORD  reserv; // резерв (0)

2. Элемент-описатель носителя. Данный элемент описывает носители (ленты),
на которых располагается информация, описываемая данным оглавлением.
Элементы-описатели носителя образуют связный список (головной указатель -
поле iphystape в заголовке).

Примечание. В текущей реализации используется только один элемент-описатель
носителя. Он располагается сразу после заголовка оглавления.

DWORD next;  // указатель на следующий элемент списка
TPB tpb;  // см. ниже
DWORD startsect; // номер первого сектора на данной ленте
DWORD numsect; // номер последнего сектора на данной ленте + 1
DWORD PToffset; // указатель на таблицу позиционирования
DWORD PTsize;  // размер таблицы позиционирования

Структура TPB характеризует носитель. Такая-же структура прописывается
драйвером в заголовок каждого кадра. Подробнее см. описание API нижнего
уровня.

struct TPB
{
 WORD format;  // формат ленты
    // ленты TDR имеют формат <=8
    // ленты AVT имеют формат >8
 WORD length;         // длина ленты
 union {
   struct {  // эта структура соответствует форматам TDR
    // используется в "конвертированных" AVT
   char name[8];// имя
   WORD ident;  // идентификатор
   WORD   resrv; // 0
   DWORD reserv; // 0
   } st;
   DWORD tapeID;  // идентификатор в формате AVT
   DWORD rsrv[3]; // 0
 };
};

3. Элемент файла/директории.

DWORD left,right; // указатели на левого и правого соседа в дереве
union {
 DWORD size; // размер в байтах (для файлов)
 DWORD tree; // указатель на вершину дерева файлов (для директорий)
};
DWORD datime;  // дата/время в формате DOS
DWORD startsect; // сектор начала файла на ленте
struct {
 unsigned    nlogsect:8; // число секторов информации о файле
    // следует на ленте после самого файла
 unsigned    bal:2; // признак балансировки дерева
 unsigned    format:2; // формат элемента файла
 unsigned    fdir:1; // флаг-признак директории
 unsigned    reserv:3; // резерв (0)
 unsigned    reserv1:16; // резерв (0)
} bits;
DWORD data1;        //
DWORD data2;     // поля, содержимое которых зависит от формата
DWORD data3;     // элемента файла
DWORD data4;        //

Предусмотрены следующие форматы элемента файла
(определяется полем bits.format):

Формат 0:
 - все поля data1 - data4 отведены под имя файла
Формат 1:
 - поля data1 - data3 отведены под имя файла
 - поле data4 занимает указатель на элемент-расширение
   (пока не используется)
Формат 2:
 - поля data1 - data3 отведены под имя файла
 - поле data4 занимает указатель на описание файла (description)
Формат 3:
 - поля data1 занимает указатель на имя файла
 - поле data2 не используется
 - поле data3 занимает указатель на элемент-расширение
   (пока не используется)
 - поле data4 занимает указатель на описание файла (description)

Информацию о формате хранения строковых данных см. в примечании к описанию
элемента-строки.

Для обеспечения быстрого поиска файлы, относящиеся к одной директории,
хранятся в виде сбалансированного двоичного дерева (подробнее об этом см.,
например, .Вирт, "Алгоритмы+Структуры данных=Программы",М. "Мир",1985, c.248)
При этом ключом сортировки является имя файла, а функцией сравнения следующая:

int my_strnicmp(const char *first,const char *last,unsigned count)
{
 int f,l;
 if(count)
 {
  do {
   if ( ((f = (unsigned char)(*(first++))) >= 'A') && (f <= 'Z') )
    f -= 'A' - 'a';
   if ( ((l = (unsigned char)(*(last++))) >= 'A') && (l <= 'Z') )
    l -= 'A' - 'a';

  } while ( --count && f && (f == l) );
  return f-l;
 }
 return 0;
}

Указатель на вершину дерева корневой директории находится в поле rootdir
заголовка оглавления.

3. Элемент-строка. Служит для хранения фрагментов строк (напр., длинное
   имя файла, description файла). Его формат:

DWORD  next;  // указатель на следующий фрагмент строки
BYTE    data[36]; // символы фрагмента строки (см. примечание выше)

Примечание. Принят следующий порядок хранения строковых данных:
Если строка занимает менее отведенного под нее поля, то она заканчивается
символом '\0'. Если же строка занимает все отведенное ей поле, то '\0' в
конце не ставится.

Если строка длиннее, чем может поместиться в одном элементе, под нее
отводится несколько элементов, объединенных в связный список.

Исторически сложилось так, что строковые данные в AVT хранятся в
ANSI-кодировке (для России это 1251 страница). В операционных системах,
использующих другую кодировку (напр, 866 страницу), в целях совметимости
должен быть предусмотрен перевод строк в ANSI-кодировку.

4. Удаленный элемент.

DWORD next;  // указатель на следующий удаленный элемент
BYTE mysor[36]; // не используется

Если в процессе корректировки оглавления элемент массива оглавления
становится неиспользуемым, он включается в связный список удаленных
элементов. Голова этого списка - поле hFree в заголовке оглавления.

Для ускорения манипуляций с элементами массива оглавления используется
следующая схема их распределения/освобождения:
- при распределении в первую очередь берется элемент из списка удаленных.
  Если список удаленных пуст, то занимается элемент в конце массива (на
  него указывает поле IEmpty в заголовке оглавления);
- при освобождении элемента он помещается в список удаленных.

II. Таблица позиционирования(ТП) представляет собой массив данных,
начинающийся с места, указываемого полем PToffset и размера PTSize,
задаваемых в элементе-описателе носителя.

ТП формируется API нижнего уровня. Задача ПО - перед чтением ленты
загрузить ТП из файла функцией AvdSetPT, а при окончании записи - считать
ТП функцией AvdGetPT. Подробнее см. описание API нижнего уровня.


 Часть 2. Описание информации о файлах, записываемой на ленту.

Для обеспечения возможности восстановления оглавления ленты и для хранения
дополнительной информации (информации о файле, хранение которой в оглавлении
нецелесообразно) на ленту формата AVT записывается информация о файле.

Информация о файле представляет собой один или несколько секторов (по 512
байт), записываемых сразу после содержимого файла (содержимое файла при этом
также выравнивается на границу 512 байт). Информация о количестве секторов
информации о файле записывается в поле nlogsect в соответствующий данному
файлу элемент оглавления.

Для обеспечения поиска информации о файле программой RECOVER первый сектор
информации о файле записывается со спец. аттрибутом командой AvdWriteLog,
последующие сектора - обычной командой AvdWrite (см. описание API нижнего
уровня).

Информация о файле делится на две части: постоянную и переменную.
В постоянной части практически дублируется информация о файле, находящаяся в
оглавлении ленты

Постоянная часть имеет следующий формат:

DWORD constformat; // номер формата общей части информации (сейчас 1)
DWORD varformat; // номер формата переменной части, зависящей от ПО
DWORD varoffset; // смещение переменной части
DWORD nlogsect; // число секторов информации о файле
DWORD datime;  // дата/время в DOS-формате
DWORD size;  // размер файла
DWORD startsect; // номер начального сектора
DWORD lenname; // длина имени файла
DWORD nameoffset; // смещение имени файла (full-path!)
DWORD lencomment; // длина описания
DWORD commoffset; // смещение описания

Переменная часть зависит от ПО (прежде всего от специфики ОС) и содержит
дополнительную информацию.

Переменная часть, используемая ПО для Win95/WinNT (varformat=1)
выглядит следующим образом:

DWORD  attribute; // аттрибут файла (в формате Win32)
FILETIME crftime; // время создания файла (в формате Win32)
FILETIME laftime; // время посл. доступа к файлу (в формате Win32)
FILETIME lwftime; // время посл. записи в файл (в формате Win32)

Переменная часть, используемая ПО для OS/2 (varformat=2)
выглядит следующим образом:

DWORD  attribute; // аттрибут файла (в формате OS/2)
DWORD  crftime; // время создания файла (в формате OS/32)
DWORD  res1;
DWORD  laftime; // время посл. доступа к файлу (в формате OS/2)
DWORD  res2;
DWORD  lwftime; // время посл записи в файл (в формате OS/2)
DWORD  res3;
DWORD         EAlen;  // длина расш. аттрибутов
DWORD  EAoffset; // смещение расш. аттрибутов


Формат переменной части, используемой ПО для DOS (varformat=??)
пока не определен.
─ SU.HARDW.SUPPORT.ARVID (2:5050/17.1) ──────────────── SU.HARDW.SUPPORT.ARVID ─
 Msg  : 126 of 149                                                              
 Кто   : Andrey Danilenko                    2:5020/35.15    Tue 11 Mar 97 17:45 
 Кому  : Max Khon                                            Wed 12 Mar 97 10:30 
 О чем : Формат AVT-ленты.                                                      
────────────────────────────────────────────────────────────────────────────────
Привет, Max!

в пятницу 07 марта 1997 Max Khon писал Andrey Danilenko следующее:

 AD>> Переменная часть, используемая ПО для OS/2 (varformat=2)
 AD>> выглядит следующим образом:

 MK> поля crftime, laftime, lwftime в .avt, сделанном в vxarvid содержат
 MK> непонятно что. объясни, пожалуйста поподробнее в каком именно формате
 MK> лежит время/дата создания etc. (или может это просто баг в
 MK> avrexx.dll?) это _точно_ не FTIME/FDATE. других форматов времени/даты
 MK> создания etc. под OS/2 я не знаю

Sorry, непpавильно написал.
Должно быть:

struct ft
{
WORD ftime;
WORD res1;
WORD fdate;
WORD res2;
};              // ну так получилось ;-)

Hу и затем, само поле:

DWORD attr;
ft crftime;
ft laftime;
ft lwftime;
DWORD EAlen;
DWORD EAoffset;

